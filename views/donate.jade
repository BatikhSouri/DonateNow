extends layout

block content
	#alert.alert.alert-dismissable(style="display: none")
		button.close(type="button", data-dismiss="alert", aria-hideen="true") &times;
		span#alertContent
	//.row
		.col-xs-12.col-sm-12
	form(role='form')
		.form-group
			label(for='project') Projet
			select#selectedProject.form-control
				- for project in projects
					option #{project.name} (#{project.shareSize} #{project.currency}/part)
		.form-group
			label(for='donorNumber') Numéro de donateur
			input#donorNumber.form-control(type='number')
		.form-group
			label(for='numShares') Nombre d'actions
			input#numShares.form-control(type='number')
		label#subtotal(style="margin-top: 20px; margin-bottom: 20px; display: block; opacity: 0") Sous-total:
		button#saveDonation.btn.btn-primary.btn-large Sauvegarder
	script.
		function calculateSubtotal(){
			$('#numShares').css('color', 'black');
			$('#subtotal').css('opacity', '0');
			var projectName = selectedProject.item(selectedProject.selectedIndex).text;
			projectName = projectName.split(/[(|)]/);
			var shareSize = Number(projectName[1].split(' ')[0]);
			var currency = projectName[1].split(' ')[1].split('/')[0];
			var numShares = document.getElementById('numShares').value;
			numShares = Number(numShares);
			if (numShares <= 0 || Math.round(numShares) != numShares){
				$('#numShares').css('color', 'red');
				return;
			}
			var newSubTotal = shareSize * numShares;
			subtotal.textContent = 'Sous-total (pour ce don): ' + newSubTotal + ' ' + currency;
			$('#subtotal').css('opacity', '1');
		}
		selectedProject.onchange = calculateSubtotal;
		numShares.onkeyup = calculateSubtotal;
		var saveButton = document.getElementById('saveDonation');
		saveButton.onclick = function(e){
			e.preventDefault();
			var projectName = selectedProject.item(selectedProject.selectedIndex).text;
			projectName = projectName.split(' (')[0];
			console.log('Project name: ' + projectName);
			var donorNumber = document.getElementById('donorNumber').value;
			donorNumber = Number(donorNumber);
			console.log(donorNumber);
			if (donorNumber == 0 || Math.round(donorNumber) != donorNumber){
				showAlert('alert-danger', '<strong>Erreur : </strong>Le numéro de donneur doit être un nombre', 1500);
				return;
			}
			var numShares = document.getElementById('numShares').value;
			numShares = Number(numShares);
			if (numShares <= 0 || Math.round(numShares) != numShares){
				showAlert('alert-danger', '<strong>Erreur : </strong>Le nombre d\'action entré est invalide', 1500);
				return;
			}
			//Building the ajax request
			var req = new XMLHttpRequest();
			var data = new FormData();
			data.append('projectName', projectName);
			data.append('donorNumber', donorNumber);
			data.append('numShares', numShares);
			req.open('POST', '/donation');
			req.onload = function(){
				if (this.status === 200){
					showAlert('alert-success', 'La donation a été enregistrée', 1500);
					document.getElementById('numShares').value = null;
				} else {
					showAlert('alert-danger', 'Erreur lors de l\'enregistrement de la donation', 1500);
				}
			};
			req.send(data);
		};
		var alertElement = document.getElementById('alert');
		var alertContent = document.getElementById('alertContent');
		function showAlert(alertClass, message, dismissTime){
			if (!(alertClass == 'alert-success' || alertClass == 'alert-info' || alertClass == 'alert-warning' || alertClass == 'alert-danger')) return;
			$('#alert').removeClass('alert-success alert-info alert-warning alert-danger');
			$('#alert').addClass(alertClass);
			alertContent.innerHTML = message;
			$('#alert').show();
			if (dismissTime && typeof dismissTime == 'number' && dismissTime > 0){
				setTimeout(function(){
					$('#alert').fadeOut(600);
				}, dismissTime);
			}
		}
